#include <stdio.h>

#define MAX_HEIGHT 100
#define MIN_HEIGHT 5
#define MAX_WIDTH 100
#define MIN_WIDTH 5

// The maze structure for how many rows and columns it's going to have. What will its be height and width, and also the 
current position of the player.

typedef struct {
    char walls[MAX_HEIGHT][MAX_WIDTH];
    int height;
    int width;
    int row;
    int col;
} Maze;

// Functions implemented for the working of the maze

void loadmaze(char *filename, Maze *maze);
    This function will load the maze from a file. using for loop. find the starting position of 
    the player(S) and then close the file,

void displayMaze(Maze *maze);
this will print the maze and tell us about the current position of the player denoted by X.

void movePlayer(Maze *maze, char direction);
this will move the player in  the direction commanded

int checkMove(Maze *maze, int row, int col);
this will avoid the player from going out of bounds or into the wall.

int blockedEnding(Maze *maze)
this will avoid from producing blocked endings

int blockedStarting(Maze *maze)
this will avoid from producing blocked startings

int isGameOver(Maze *maze);
tells us if the player has reached the end(E).

int main(int argc, char *argv[]) {
    // It expects the name of the maze file.
    if (argc != 2) {
        printf("Usage: %s <maze_file>\n", argv[0]);
        return 1;
    }

    Maze maze;
    loadmaze(argv[1], &maze);

    char move;
    while (!isGameOver(&maze)) {
        printf("Enter (W/A/S/D/M): ");
        scanf(" %s", &move);

// on enetering M or m it displays the maze else it will return back to moving according
to the input given
        if (move == 'M' || move == 'm') {
            displayMaze(&maze);
        } else {
            movePlayer(&maze, move);
        }
    }

    printf("Congratulations! You have won the game!\n");

    return 0;
}


